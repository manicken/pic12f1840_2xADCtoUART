

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Fri Jul 16 23:08:56 2021

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC12F1840 Definitions
    37                           ; 
    38  0008                     fsr0h equ 05h
    39  0005                     fsr0l equ 04h
    40  0004                     fsr1h equ 07h
    41  0007                     fsr1l equ 06h
    42  0006                     indf equ 00h
    43  0000                     indf0 equ 00h
    44  0000                     indf1 equ 01h
    45  0001                     intcon equ 0Bh
    46  000B                     pc equ 02h
    47  0002                     pcl equ 02h
    48  0002                     pclath equ 0Ah
    49  000A                     status equ 03h
    50  0003                     wreg equ 09h
    51  0009                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     pushw	macro
    88                           	movwi fsr1++
    89                           	endm
    90  0000                     popw	macro
    91                           	moviw --fsr1
    92                           	endm
    93  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
    94                           INDF0 equ 00h ;# 
    95  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
    96                           INDF1 equ 01h ;# 
    97  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
    98                           PCL equ 02h ;# 
    99  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   100                           STATUS equ 03h ;# 
   101  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   102                           FSR0L equ 04h ;# 
   103  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   104                           FSR0H equ 05h ;# 
   105  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   106                           FSR1L equ 06h ;# 
   107  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   108                           FSR1H equ 07h ;# 
   109  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   110                           BSR equ 08h ;# 
   111  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   112                           WREG equ 09h ;# 
   113  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   114                           PCLATH equ 0Ah ;# 
   115  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   116                           INTCON equ 0Bh ;# 
   117  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   118                           PORTA equ 0Ch ;# 
   119  000C                     # 481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   120                           PIR1 equ 011h ;# 
   121  0011                     # 543 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   122                           PIR2 equ 012h ;# 
   123  0012                     # 583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   124                           TMR0 equ 015h ;# 
   125  0015                     # 603 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   126                           TMR1 equ 016h ;# 
   127  0016                     # 610 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   128                           TMR1L equ 016h ;# 
   129  0016                     # 630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   130                           TMR1H equ 017h ;# 
   131  0017                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   132                           T1CON equ 018h ;# 
   133  0018                     # 722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   134                           T1GCON equ 019h ;# 
   135  0019                     # 799 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   136                           TMR2 equ 01Ah ;# 
   137  001A                     # 819 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   138                           PR2 equ 01Bh ;# 
   139  001B                     # 839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   140                           T2CON equ 01Ch ;# 
   141  001C                     # 910 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   142                           CPSCON0 equ 01Eh ;# 
   143  001E                     # 970 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   144                           CPSCON1 equ 01Fh ;# 
   145  001F                     # 1004 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   146                           TRISA equ 08Ch ;# 
   147  008C                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   148                           PIE1 equ 091h ;# 
   149  0091                     # 1116 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   150                           PIE2 equ 092h ;# 
   151  0092                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   152                           OPTION_REG equ 095h ;# 
   153  0095                     # 1239 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   154                           PCON equ 096h ;# 
   155  0096                     # 1290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   156                           WDTCON equ 097h ;# 
   157  0097                     # 1349 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   158                           OSCTUNE equ 098h ;# 
   159  0098                     # 1407 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   160                           OSCCON equ 099h ;# 
   161  0099                     # 1479 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   162                           OSCSTAT equ 09Ah ;# 
   163  009A                     # 1541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   164                           ADRES equ 09Bh ;# 
   165  009B                     # 1548 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   166                           ADRESL equ 09Bh ;# 
   167  009B                     # 1568 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   168                           ADRESH equ 09Ch ;# 
   169  009C                     # 1588 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   170                           ADCON0 equ 09Dh ;# 
   171  009D                     # 1668 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   172                           ADCON1 equ 09Eh ;# 
   173  009E                     # 1734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   174                           LATA equ 010Ch ;# 
   175  010C                     # 1779 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   176                           CM1CON0 equ 0111h ;# 
   177  0111                     # 1836 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   178                           CM1CON1 equ 0112h ;# 
   179  0112                     # 1896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   180                           CMOUT equ 0115h ;# 
   181  0115                     # 1916 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   182                           BORCON equ 0116h ;# 
   183  0116                     # 1949 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   184                           FVRCON equ 0117h ;# 
   185  0117                     # 2025 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   186                           DACCON0 equ 0118h ;# 
   187  0118                     # 2080 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   188                           DACCON1 equ 0119h ;# 
   189  0119                     # 2132 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   190                           SRCON0 equ 011Ah ;# 
   191  011A                     # 2203 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   192                           SRCON1 equ 011Bh ;# 
   193  011B                     # 2255 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   194                           APFCON equ 011Dh ;# 
   195  011D                     # 2260 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   196                           APFCON0 equ 011Dh ;# 
   197  011D                     # 2397 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   198                           ANSELA equ 018Ch ;# 
   199  018C                     # 2444 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   200                           EEADR equ 0191h ;# 
   201  0191                     # 2451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   202                           EEADRL equ 0191h ;# 
   203  0191                     # 2471 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   204                           EEADRH equ 0192h ;# 
   205  0192                     # 2491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   206                           EEDAT equ 0193h ;# 
   207  0193                     # 2498 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   208                           EEDATL equ 0193h ;# 
   209  0193                     # 2503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   210                           EEDATA equ 0193h ;# 
   211  0193                     # 2536 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   212                           EEDATH equ 0194h ;# 
   213  0194                     # 2556 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   214                           EECON1 equ 0195h ;# 
   215  0195                     # 2618 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   216                           EECON2 equ 0196h ;# 
   217  0196                     # 2638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   218                           VREGCON equ 0197h ;# 
   219  0197                     # 2672 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   220                           RCREG equ 0199h ;# 
   221  0199                     # 2692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   222                           TXREG equ 019Ah ;# 
   223  019A                     # 2712 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   224                           SP1BRG equ 019Bh ;# 
   225  019B                     # 2719 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   226                           SP1BRGL equ 019Bh ;# 
   227  019B                     # 2724 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   228                           SPBRG equ 019Bh ;# 
   229  019B                     # 2728 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   230                           SPBRGL equ 019Bh ;# 
   231  019B                     # 2773 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   232                           SP1BRGH equ 019Ch ;# 
   233  019C                     # 2778 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   234                           SPBRGH equ 019Ch ;# 
   235  019C                     # 2811 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   236                           RCSTA equ 019Dh ;# 
   237  019D                     # 2873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   238                           TXSTA equ 019Eh ;# 
   239  019E                     # 2935 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   240                           BAUDCON equ 019Fh ;# 
   241  019F                     # 2987 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   242                           WPUA equ 020Ch ;# 
   243  020C                     # 3045 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   244                           SSP1BUF equ 0211h ;# 
   245  0211                     # 3050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   246                           SSPBUF equ 0211h ;# 
   247  0211                     # 3083 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   248                           SSP1ADD equ 0212h ;# 
   249  0212                     # 3088 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   250                           SSPADD equ 0212h ;# 
   251  0212                     # 3121 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   252                           SSP1MSK equ 0213h ;# 
   253  0213                     # 3126 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   254                           SSPMSK equ 0213h ;# 
   255  0213                     # 3159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   256                           SSP1STAT equ 0214h ;# 
   257  0214                     # 3164 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   258                           SSPSTAT equ 0214h ;# 
   259  0214                     # 3281 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   260                           SSP1CON1 equ 0215h ;# 
   261  0215                     # 3286 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   262                           SSPCON1 equ 0215h ;# 
   263  0215                     # 3290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   264                           SSPCON equ 0215h ;# 
   265  0215                     # 3485 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   266                           SSP1CON2 equ 0216h ;# 
   267  0216                     # 3490 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   268                           SSPCON2 equ 0216h ;# 
   269  0216                     # 3607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   270                           SSP1CON3 equ 0217h ;# 
   271  0217                     # 3612 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   272                           SSPCON3 equ 0217h ;# 
   273  0217                     # 3729 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   274                           CCPR1 equ 0291h ;# 
   275  0291                     # 3736 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   276                           CCPR1L equ 0291h ;# 
   277  0291                     # 3756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   278                           CCPR1H equ 0292h ;# 
   279  0292                     # 3776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   280                           CCP1CON equ 0293h ;# 
   281  0293                     # 3858 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   282                           PWM1CON equ 0294h ;# 
   283  0294                     # 3928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   284                           CCP1AS equ 0295h ;# 
   285  0295                     # 3933 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   286                           ECCP1AS equ 0295h ;# 
   287  0295                     # 4090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   288                           PSTR1CON equ 0296h ;# 
   289  0296                     # 4124 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   290                           IOCAP equ 0391h ;# 
   291  0391                     # 4182 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   292                           IOCAN equ 0392h ;# 
   293  0392                     # 4240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   294                           IOCAF equ 0393h ;# 
   295  0393                     # 4298 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   296                           CLKRCON equ 039Ah ;# 
   297  039A                     # 4374 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   298                           MDCON equ 039Ch ;# 
   299  039C                     # 4425 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   300                           MDSRC equ 039Dh ;# 
   301  039D                     # 4478 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   302                           MDCARL equ 039Eh ;# 
   303  039E                     # 4543 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   304                           MDCARH equ 039Fh ;# 
   305  039F                     # 4608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   306                           STATUS_SHAD equ 0FE4h ;# 
   307  0FE4                     # 4640 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   308                           WREG_SHAD equ 0FE5h ;# 
   309  0FE5                     # 4660 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   310                           BSR_SHAD equ 0FE6h ;# 
   311  0FE6                     # 4680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   312                           PCLATH_SHAD equ 0FE7h ;# 
   313  0FE7                     # 4700 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   314                           FSR0L_SHAD equ 0FE8h ;# 
   315  0FE8                     # 4720 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   316                           FSR0H_SHAD equ 0FE9h ;# 
   317  0FE9                     # 4740 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   318                           FSR1L_SHAD equ 0FEAh ;# 
   319  0FEA                     # 4760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   320                           FSR1H_SHAD equ 0FEBh ;# 
   321  0FEB                     # 4780 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   322                           STKPTR equ 0FEDh ;# 
   323  0FED                     # 4800 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   324                           TOSL equ 0FEEh ;# 
   325  0FEE                     # 4820 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   326                           TOSH equ 0FEFh ;# 
   327  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   328                           INDF0 equ 00h ;# 
   329  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   330                           INDF1 equ 01h ;# 
   331  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   332                           PCL equ 02h ;# 
   333  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   334                           STATUS equ 03h ;# 
   335  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   336                           FSR0L equ 04h ;# 
   337  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   338                           FSR0H equ 05h ;# 
   339  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   340                           FSR1L equ 06h ;# 
   341  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   342                           FSR1H equ 07h ;# 
   343  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   344                           BSR equ 08h ;# 
   345  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   346                           WREG equ 09h ;# 
   347  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   348                           PCLATH equ 0Ah ;# 
   349  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   350                           INTCON equ 0Bh ;# 
   351  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   352                           PORTA equ 0Ch ;# 
   353  000C                     # 481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   354                           PIR1 equ 011h ;# 
   355  0011                     # 543 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   356                           PIR2 equ 012h ;# 
   357  0012                     # 583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   358                           TMR0 equ 015h ;# 
   359  0015                     # 603 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   360                           TMR1 equ 016h ;# 
   361  0016                     # 610 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   362                           TMR1L equ 016h ;# 
   363  0016                     # 630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   364                           TMR1H equ 017h ;# 
   365  0017                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   366                           T1CON equ 018h ;# 
   367  0018                     # 722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   368                           T1GCON equ 019h ;# 
   369  0019                     # 799 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   370                           TMR2 equ 01Ah ;# 
   371  001A                     # 819 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   372                           PR2 equ 01Bh ;# 
   373  001B                     # 839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   374                           T2CON equ 01Ch ;# 
   375  001C                     # 910 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   376                           CPSCON0 equ 01Eh ;# 
   377  001E                     # 970 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   378                           CPSCON1 equ 01Fh ;# 
   379  001F                     # 1004 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   380                           TRISA equ 08Ch ;# 
   381  008C                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   382                           PIE1 equ 091h ;# 
   383  0091                     # 1116 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   384                           PIE2 equ 092h ;# 
   385  0092                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   386                           OPTION_REG equ 095h ;# 
   387  0095                     # 1239 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   388                           PCON equ 096h ;# 
   389  0096                     # 1290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   390                           WDTCON equ 097h ;# 
   391  0097                     # 1349 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   392                           OSCTUNE equ 098h ;# 
   393  0098                     # 1407 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   394                           OSCCON equ 099h ;# 
   395  0099                     # 1479 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   396                           OSCSTAT equ 09Ah ;# 
   397  009A                     # 1541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   398                           ADRES equ 09Bh ;# 
   399  009B                     # 1548 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   400                           ADRESL equ 09Bh ;# 
   401  009B                     # 1568 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   402                           ADRESH equ 09Ch ;# 
   403  009C                     # 1588 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   404                           ADCON0 equ 09Dh ;# 
   405  009D                     # 1668 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   406                           ADCON1 equ 09Eh ;# 
   407  009E                     # 1734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   408                           LATA equ 010Ch ;# 
   409  010C                     # 1779 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   410                           CM1CON0 equ 0111h ;# 
   411  0111                     # 1836 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   412                           CM1CON1 equ 0112h ;# 
   413  0112                     # 1896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   414                           CMOUT equ 0115h ;# 
   415  0115                     # 1916 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   416                           BORCON equ 0116h ;# 
   417  0116                     # 1949 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   418                           FVRCON equ 0117h ;# 
   419  0117                     # 2025 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   420                           DACCON0 equ 0118h ;# 
   421  0118                     # 2080 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   422                           DACCON1 equ 0119h ;# 
   423  0119                     # 2132 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   424                           SRCON0 equ 011Ah ;# 
   425  011A                     # 2203 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   426                           SRCON1 equ 011Bh ;# 
   427  011B                     # 2255 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   428                           APFCON equ 011Dh ;# 
   429  011D                     # 2260 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   430                           APFCON0 equ 011Dh ;# 
   431  011D                     # 2397 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   432                           ANSELA equ 018Ch ;# 
   433  018C                     # 2444 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   434                           EEADR equ 0191h ;# 
   435  0191                     # 2451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   436                           EEADRL equ 0191h ;# 
   437  0191                     # 2471 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   438                           EEADRH equ 0192h ;# 
   439  0192                     # 2491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   440                           EEDAT equ 0193h ;# 
   441  0193                     # 2498 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   442                           EEDATL equ 0193h ;# 
   443  0193                     # 2503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   444                           EEDATA equ 0193h ;# 
   445  0193                     # 2536 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   446                           EEDATH equ 0194h ;# 
   447  0194                     # 2556 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   448                           EECON1 equ 0195h ;# 
   449  0195                     # 2618 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   450                           EECON2 equ 0196h ;# 
   451  0196                     # 2638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   452                           VREGCON equ 0197h ;# 
   453  0197                     # 2672 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   454                           RCREG equ 0199h ;# 
   455  0199                     # 2692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   456                           TXREG equ 019Ah ;# 
   457  019A                     # 2712 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   458                           SP1BRG equ 019Bh ;# 
   459  019B                     # 2719 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   460                           SP1BRGL equ 019Bh ;# 
   461  019B                     # 2724 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   462                           SPBRG equ 019Bh ;# 
   463  019B                     # 2728 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   464                           SPBRGL equ 019Bh ;# 
   465  019B                     # 2773 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   466                           SP1BRGH equ 019Ch ;# 
   467  019C                     # 2778 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   468                           SPBRGH equ 019Ch ;# 
   469  019C                     # 2811 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   470                           RCSTA equ 019Dh ;# 
   471  019D                     # 2873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   472                           TXSTA equ 019Eh ;# 
   473  019E                     # 2935 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   474                           BAUDCON equ 019Fh ;# 
   475  019F                     # 2987 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   476                           WPUA equ 020Ch ;# 
   477  020C                     # 3045 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   478                           SSP1BUF equ 0211h ;# 
   479  0211                     # 3050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   480                           SSPBUF equ 0211h ;# 
   481  0211                     # 3083 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   482                           SSP1ADD equ 0212h ;# 
   483  0212                     # 3088 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   484                           SSPADD equ 0212h ;# 
   485  0212                     # 3121 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   486                           SSP1MSK equ 0213h ;# 
   487  0213                     # 3126 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   488                           SSPMSK equ 0213h ;# 
   489  0213                     # 3159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   490                           SSP1STAT equ 0214h ;# 
   491  0214                     # 3164 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   492                           SSPSTAT equ 0214h ;# 
   493  0214                     # 3281 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   494                           SSP1CON1 equ 0215h ;# 
   495  0215                     # 3286 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   496                           SSPCON1 equ 0215h ;# 
   497  0215                     # 3290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   498                           SSPCON equ 0215h ;# 
   499  0215                     # 3485 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   500                           SSP1CON2 equ 0216h ;# 
   501  0216                     # 3490 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   502                           SSPCON2 equ 0216h ;# 
   503  0216                     # 3607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   504                           SSP1CON3 equ 0217h ;# 
   505  0217                     # 3612 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   506                           SSPCON3 equ 0217h ;# 
   507  0217                     # 3729 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   508                           CCPR1 equ 0291h ;# 
   509  0291                     # 3736 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   510                           CCPR1L equ 0291h ;# 
   511  0291                     # 3756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   512                           CCPR1H equ 0292h ;# 
   513  0292                     # 3776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   514                           CCP1CON equ 0293h ;# 
   515  0293                     # 3858 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   516                           PWM1CON equ 0294h ;# 
   517  0294                     # 3928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   518                           CCP1AS equ 0295h ;# 
   519  0295                     # 3933 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   520                           ECCP1AS equ 0295h ;# 
   521  0295                     # 4090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   522                           PSTR1CON equ 0296h ;# 
   523  0296                     # 4124 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   524                           IOCAP equ 0391h ;# 
   525  0391                     # 4182 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   526                           IOCAN equ 0392h ;# 
   527  0392                     # 4240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   528                           IOCAF equ 0393h ;# 
   529  0393                     # 4298 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   530                           CLKRCON equ 039Ah ;# 
   531  039A                     # 4374 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   532                           MDCON equ 039Ch ;# 
   533  039C                     # 4425 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   534                           MDSRC equ 039Dh ;# 
   535  039D                     # 4478 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   536                           MDCARL equ 039Eh ;# 
   537  039E                     # 4543 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   538                           MDCARH equ 039Fh ;# 
   539  039F                     # 4608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   540                           STATUS_SHAD equ 0FE4h ;# 
   541  0FE4                     # 4640 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   542                           WREG_SHAD equ 0FE5h ;# 
   543  0FE5                     # 4660 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   544                           BSR_SHAD equ 0FE6h ;# 
   545  0FE6                     # 4680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   546                           PCLATH_SHAD equ 0FE7h ;# 
   547  0FE7                     # 4700 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   548                           FSR0L_SHAD equ 0FE8h ;# 
   549  0FE8                     # 4720 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   550                           FSR0H_SHAD equ 0FE9h ;# 
   551  0FE9                     # 4740 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   552                           FSR1L_SHAD equ 0FEAh ;# 
   553  0FEA                     # 4760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   554                           FSR1H_SHAD equ 0FEBh ;# 
   555  0FEB                     # 4780 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   556                           STKPTR equ 0FEDh ;# 
   557  0FED                     # 4800 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   558                           TOSL equ 0FEEh ;# 
   559  0FEE                     # 4820 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1840.h"
   560                           TOSH equ 0FEFh ;# 
   561  0FEF                     	FNCALL	_main,_UART_send_char
   562                           	FNCALL	_main,_UART_send_uint16_4dec
   563                           	FNCALL	_main,_delay
   564                           	FNCALL	_UART_send_uint16_4dec,_UART_send_char
   565                           	FNCALL	_UART_send_uint16_4dec,___lwdiv
   566                           	FNCALL	_UART_send_uint16_4dec,___lwmod
   567                           	FNROOT	_main
   568                           	global	_adc_ch1_val_lsb
   569                           	global	_adc_ch1_val_msb
   570                           	global	_adc_ch2_val_lsb
   571                           	global	_adc_ch2_val_msb
   572                           	global	_TMR0
   573                           _TMR0	set	0x15
   574  0015                     	global	_INTCONbits
   575                           _INTCONbits	set	0xB
   576  000B                     	global	_PORTA
   577                           _PORTA	set	0xC
   578  000C                     	global	_ADRESL
   579                           _ADRESL	set	0x9B
   580  009B                     	global	_ADRESH
   581                           _ADRESH	set	0x9C
   582  009C                     	global	_ADCON0bits
   583                           _ADCON0bits	set	0x9D
   584  009D                     	global	_ADCON1bits
   585                           _ADCON1bits	set	0x9E
   586  009E                     	global	_ADCON1
   587                           _ADCON1	set	0x9E
   588  009E                     	global	_ADCON0
   589                           _ADCON0	set	0x9D
   590  009D                     	global	_OPTION_REGbits
   591                           _OPTION_REGbits	set	0x95
   592  0095                     	global	_TRISAbits
   593                           _TRISAbits	set	0x8C
   594  008C                     	global	_TRISA
   595                           _TRISA	set	0x8C
   596  008C                     	global	_OSCSTATbits
   597                           _OSCSTATbits	set	0x9A
   598  009A                     	global	_OSCCON
   599                           _OSCCON	set	0x99
   600  0099                     	global	_FVRCONbits
   601                           _FVRCONbits	set	0x117
   602  0117                     	global	_FVRCON
   603                           _FVRCON	set	0x117
   604  0117                     	global	_LATAbits
   605                           _LATAbits	set	0x10C
   606  010C                     	global	_LATA
   607                           _LATA	set	0x10C
   608  010C                     	global	_TXREG
   609                           _TXREG	set	0x19A
   610  019A                     	global	_SPBRG
   611                           _SPBRG	set	0x19B
   612  019B                     	global	_BAUDCONbits
   613                           _BAUDCONbits	set	0x19F
   614  019F                     	global	_TXSTAbits
   615                           _TXSTAbits	set	0x19E
   616  019E                     	global	_BAUDCON
   617                           _BAUDCON	set	0x19F
   618  019F                     	global	_RCSTA
   619                           _RCSTA	set	0x19D
   620  019D                     	global	_TXSTA
   621                           _TXSTA	set	0x19E
   622  019E                     ; #config settings
   623                           global __CFG_FOSC$INTOSC
   624                           __CFG_FOSC$INTOSC equ 0x0
   625  0000                     global __CFG_WDTE$OFF
   626                           __CFG_WDTE$OFF equ 0x0
   627  0000                     global __CFG_PWRTE$ON
   628                           __CFG_PWRTE$ON equ 0x0
   629  0000                     global __CFG_MCLRE$ON
   630                           __CFG_MCLRE$ON equ 0x0
   631  0000                     global __CFG_CP$OFF
   632                           __CFG_CP$OFF equ 0x0
   633  0000                     global __CFG_CPD$OFF
   634                           __CFG_CPD$OFF equ 0x0
   635  0000                     global __CFG_BOREN$ON
   636                           __CFG_BOREN$ON equ 0x0
   637  0000                     global __CFG_CLKOUTEN$OFF
   638                           __CFG_CLKOUTEN$OFF equ 0x0
   639  0000                     global __CFG_IESO$OFF
   640                           __CFG_IESO$OFF equ 0x0
   641  0000                     global __CFG_FCMEN$ON
   642                           __CFG_FCMEN$ON equ 0x0
   643  0000                     global __CFG_WRT$OFF
   644                           __CFG_WRT$OFF equ 0x0
   645  0000                     global __CFG_PLLEN$OFF
   646                           __CFG_PLLEN$OFF equ 0x0
   647  0000                     global __CFG_STVREN$ON
   648                           __CFG_STVREN$ON equ 0x0
   649  0000                     global __CFG_BORV$LO
   650                           __CFG_BORV$LO equ 0x0
   651  0000                     global __CFG_LVP$OFF
   652                           __CFG_LVP$OFF equ 0x0
   653  0000                     	file	"C:\Users\tde04\AppData\Local\Temp\s740."
   654                           	line	#
   655                           psect cinit,class=CODE,delta=2
   656                           global start_initialization
   657                           start_initialization:
   658  07F6                     
   659                           global __initialization
   660                           __initialization:
   661  07F6                     psect	bssCOMMON,class=COMMON,space=1,noexec
   662                           global __pbssCOMMON
   663                           __pbssCOMMON:
   664  007C                     _adc_ch1_val_lsb:
   665  007C                            ds      1
   666  007C                     
   667                           _adc_ch1_val_msb:
   668  007D                            ds      1
   669  007D                     
   670                           psect	bssBANK0,class=BANK0,space=1,noexec
   671                           global __pbssBANK0
   672                           __pbssBANK0:
   673  0025                     _adc_temp_val_lsb:
   674  0025                            ds      1
   675  0025                     
   676                           _adc_temp_val_msb:
   677  0026                            ds      1
   678  0026                     
   679                           _adc_ch2_val_lsb:
   680  0027                            ds      1
   681  0027                     
   682                           _adc_ch2_val_msb:
   683  0028                            ds      1
   684  0028                     
   685                           	file	"C:\Users\tde04\AppData\Local\Temp\s740."
   686                           	line	#
   687                           ; Clear objects allocated to COMMON
   688                           psect cinit,class=CODE,delta=2,merge=1
   689                           	global __pbssCOMMON
   690                           	clrf	((__pbssCOMMON)+0)&07Fh
   691  07F6  01FC               	clrf	((__pbssCOMMON)+1)&07Fh
   692  07F7  01FD               ; Clear objects allocated to BANK0
   693                           psect cinit,class=CODE,delta=2,merge=1
   694                           	global __pbssBANK0
   695                           	movlb 0	; select bank0
   696  07F8  0020               	clrf	((__pbssBANK0)+0)&07Fh
   697  07F9  01A5               	clrf	((__pbssBANK0)+1)&07Fh
   698  07FA  01A6               	clrf	((__pbssBANK0)+2)&07Fh
   699  07FB  01A7               	clrf	((__pbssBANK0)+3)&07Fh
   700  07FC  01A8               psect cinit,class=CODE,delta=2,merge=1
   701                           global end_of_initialization,__end_of__initialization
   702                           
   703                           ;End of C runtime variable initialization code
   704                           
   705                           end_of_initialization:
   706  07FD                     __end_of__initialization:
   707  07FD                     movlb 0
   708  07FD  0020               ljmp _main	;jump to C main() function
   709  07FE  3187  2F2E         psect	cstackCOMMON,class=COMMON,space=1,noexec
   710                           global __pcstackCOMMON
   711                           __pcstackCOMMON:
   712  0070                     ?_delay:	; 1 bytes @ 0x0
   713  0070                     ?_UART_send_char:	; 1 bytes @ 0x0
   714  0070                     ??_UART_send_char:	; 1 bytes @ 0x0
   715  0070                     ?_main:	; 1 bytes @ 0x0
   716  0070                     	global	?___lwdiv
   717                           ?___lwdiv:	; 2 bytes @ 0x0
   718  0070                     	global	?___lwmod
   719                           ?___lwmod:	; 2 bytes @ 0x0
   720  0070                     	global	UART_send_char@data
   721                           UART_send_char@data:	; 1 bytes @ 0x0
   722  0070                     	global	delay@ms
   723                           delay@ms:	; 2 bytes @ 0x0
   724  0070                     	global	___lwdiv@divisor
   725                           ___lwdiv@divisor:	; 2 bytes @ 0x0
   726  0070                     	global	___lwmod@divisor
   727                           ___lwmod@divisor:	; 2 bytes @ 0x0
   728  0070                     	ds	2
   729  0070                     ??_delay:	; 1 bytes @ 0x2
   730  0072                     	global	___lwdiv@dividend
   731                           ___lwdiv@dividend:	; 2 bytes @ 0x2
   732  0072                     	global	___lwmod@dividend
   733                           ___lwmod@dividend:	; 2 bytes @ 0x2
   734  0072                     	ds	2
   735  0072                     ??___lwdiv:	; 1 bytes @ 0x4
   736  0074                     ??___lwmod:	; 1 bytes @ 0x4
   737  0074                     	ds	1
   738  0074                     	global	___lwmod@counter
   739                           ___lwmod@counter:	; 1 bytes @ 0x5
   740  0075                     	global	___lwdiv@quotient
   741                           ___lwdiv@quotient:	; 2 bytes @ 0x5
   742  0075                     	ds	2
   743  0075                     	global	___lwdiv@counter
   744                           ___lwdiv@counter:	; 1 bytes @ 0x7
   745  0077                     	ds	1
   746  0077                     ?_UART_send_uint16_4dec:	; 1 bytes @ 0x8
   747  0078                     	global	UART_send_uint16_4dec@val
   748                           UART_send_uint16_4dec@val:	; 2 bytes @ 0x8
   749  0078                     	ds	2
   750  0078                     ??_UART_send_uint16_4dec:	; 1 bytes @ 0xA
   751  007A                     	ds	1
   752  007A                     	global	UART_send_uint16_4dec@toSend
   753                           UART_send_uint16_4dec@toSend:	; 1 bytes @ 0xB
   754  007B                     	ds	1
   755  007B                     psect	cstackBANK0,class=BANK0,space=1,noexec
   756                           global __pcstackBANK0
   757                           __pcstackBANK0:
   758  0020                     ??_main:	; 1 bytes @ 0x0
   759  0020                     	ds	5
   760  0020                     ;!
   761                           ;!Data Sizes:
   762                           ;!    Strings     0
   763                           ;!    Constant    0
   764                           ;!    Data        0
   765                           ;!    BSS         6
   766                           ;!    Persistent  0
   767                           ;!    Stack       0
   768                           ;!
   769                           ;!Auto Spaces:
   770                           ;!    Space          Size  Autos    Used
   771                           ;!    COMMON           14     12      14
   772                           ;!    BANK0            80      5       9
   773                           ;!    BANK1            80      0       0
   774                           ;!    BANK2            80      0       0
   775                           
   776                           ;!
   777                           ;!Pointer List with Targets:
   778                           ;!
   779                           ;!    None.
   780                           
   781                           
   782                           ;!
   783                           ;!Critical Paths under _main in COMMON
   784                           ;!
   785                           ;!    _main->_UART_send_uint16_4dec
   786                           ;!    _UART_send_uint16_4dec->___lwdiv
   787                           ;!
   788                           ;!Critical Paths under _main in BANK0
   789                           ;!
   790                           ;!    None.
   791                           ;!
   792                           ;!Critical Paths under _main in BANK1
   793                           ;!
   794                           ;!    None.
   795                           ;!
   796                           ;!Critical Paths under _main in BANK2
   797                           ;!
   798                           ;!    None.
   799                           
   800 ;;
   801 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
   802 ;;
   803                           
   804                           ;!
   805                           ;!Call Graph Tables:
   806                           ;!
   807                           ;! ---------------------------------------------------------------------------------
   808                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   809                           ;! ---------------------------------------------------------------------------------
   810                           ;! (0) _main                                                 5     5      0    2005
   811                           ;!                                              0 BANK0      5     5      0
   812                           ;!                     _UART_send_char
   813                           ;!              _UART_send_uint16_4dec
   814                           ;!                              _delay
   815                           ;! ---------------------------------------------------------------------------------
   816                           ;! (1) _delay                                                2     0      2     327
   817                           ;!                                              0 COMMON     2     0      2
   818                           ;! ---------------------------------------------------------------------------------
   819                           ;! (1) _UART_send_uint16_4dec                                4     2      2    1656
   820                           ;!                                              8 COMMON     4     2      2
   821                           ;!                     _UART_send_char
   822                           ;!                            ___lwdiv
   823                           ;!                            ___lwmod
   824                           ;! ---------------------------------------------------------------------------------
   825                           ;! (2) ___lwmod                                              6     2      4     615
   826                           ;!                                              0 COMMON     6     2      4
   827                           ;! ---------------------------------------------------------------------------------
   828                           ;! (2) ___lwdiv                                              8     4      4     618
   829                           ;!                                              0 COMMON     8     4      4
   830                           ;! ---------------------------------------------------------------------------------
   831                           ;! (2) _UART_send_char                                       1     1      0      22
   832                           ;!                                              0 COMMON     1     1      0
   833                           ;! ---------------------------------------------------------------------------------
   834                           ;! Estimated maximum stack depth 2
   835                           ;! ---------------------------------------------------------------------------------
   836                           ;!
   837                           ;! Call Graph Graphs:
   838                           ;!
   839                           ;! _main (ROOT)
   840                           ;!   _UART_send_char
   841                           ;!   _UART_send_uint16_4dec
   842                           ;!     _UART_send_char
   843                           ;!     ___lwdiv
   844                           ;!     ___lwmod
   845                           ;!   _delay
   846                           ;!
   847                           
   848                           ;! Address spaces:
   849                           
   850                           ;!Name               Size   Autos  Total    Cost      Usage
   851                           ;!BIGRAM              F0      0       0       0        0.0%
   852                           ;!EEDATA             100      0       0       0        0.0%
   853                           ;!NULL                 0      0       0       0        0.0%
   854                           ;!CODE                 0      0       0       0        0.0%
   855                           ;!BITCOMMON            E      0       0       1        0.0%
   856                           ;!BITSFR0              0      0       0       1        0.0%
   857                           ;!SFR0                 0      0       0       1        0.0%
   858                           ;!COMMON               E      C       E       2      100.0%
   859                           ;!BITSFR1              0      0       0       2        0.0%
   860                           ;!SFR1                 0      0       0       2        0.0%
   861                           ;!BITSFR2              0      0       0       3        0.0%
   862                           ;!SFR2                 0      0       0       3        0.0%
   863                           ;!STACK                0      0       0       3        0.0%
   864                           ;!BITSFR3              0      0       0       4        0.0%
   865                           ;!SFR3                 0      0       0       4        0.0%
   866                           ;!ABS                  0      0      17       4        0.0%
   867                           ;!BITBANK0            50      0       0       5        0.0%
   868                           ;!BITSFR4              0      0       0       5        0.0%
   869                           ;!SFR4                 0      0       0       5        0.0%
   870                           ;!BANK0               50      5       9       6       11.3%
   871                           ;!BITSFR5              0      0       0       6        0.0%
   872                           ;!SFR5                 0      0       0       6        0.0%
   873                           ;!BITBANK1            50      0       0       7        0.0%
   874                           ;!BITSFR6              0      0       0       7        0.0%
   875                           ;!SFR6                 0      0       0       7        0.0%
   876                           ;!BANK1               50      0       0       8        0.0%
   877                           ;!BITSFR7              0      0       0       8        0.0%
   878                           ;!SFR7                 0      0       0       8        0.0%
   879                           ;!BITBANK2            50      0       0       9        0.0%
   880                           ;!BITSFR8              0      0       0       9        0.0%
   881                           ;!SFR8                 0      0       0       9        0.0%
   882                           ;!BANK2               50      0       0      10        0.0%
   883                           ;!BITSFR9              0      0       0      10        0.0%
   884                           ;!SFR9                 0      0       0      10        0.0%
   885                           ;!BITSFR10             0      0       0      11        0.0%
   886                           ;!SFR10                0      0       0      11        0.0%
   887                           ;!DATA                 0      0      17      11        0.0%
   888                           ;!BITSFR11             0      0       0      12        0.0%
   889                           ;!SFR11                0      0       0      12        0.0%
   890                           ;!BITSFR12             0      0       0      13        0.0%
   891                           ;!SFR12                0      0       0      13        0.0%
   892                           ;!BITSFR13             0      0       0      14        0.0%
   893                           ;!SFR13                0      0       0      14        0.0%
   894                           ;!BITSFR14             0      0       0      15        0.0%
   895                           ;!SFR14                0      0       0      15        0.0%
   896                           ;!BITSFR15             0      0       0      16        0.0%
   897                           ;!SFR15                0      0       0      16        0.0%
   898                           ;!BITSFR16             0      0       0      17        0.0%
   899                           ;!SFR16                0      0       0      17        0.0%
   900                           ;!BITSFR17             0      0       0      18        0.0%
   901                           ;!SFR17                0      0       0      18        0.0%
   902                           ;!BITSFR18             0      0       0      19        0.0%
   903                           ;!SFR18                0      0       0      19        0.0%
   904                           ;!BITSFR19             0      0       0      20        0.0%
   905                           ;!SFR19                0      0       0      20        0.0%
   906                           ;!BITSFR20             0      0       0      21        0.0%
   907                           ;!SFR20                0      0       0      21        0.0%
   908                           ;!BITSFR21             0      0       0      22        0.0%
   909                           ;!SFR21                0      0       0      22        0.0%
   910                           ;!BITSFR22             0      0       0      23        0.0%
   911                           ;!SFR22                0      0       0      23        0.0%
   912                           ;!BITSFR23             0      0       0      24        0.0%
   913                           ;!SFR23                0      0       0      24        0.0%
   914                           ;!BITSFR24             0      0       0      25        0.0%
   915                           ;!SFR24                0      0       0      25        0.0%
   916                           ;!BITSFR25             0      0       0      26        0.0%
   917                           ;!SFR25                0      0       0      26        0.0%
   918                           ;!BITSFR26             0      0       0      27        0.0%
   919                           ;!SFR26                0      0       0      27        0.0%
   920                           ;!BITSFR27             0      0       0      28        0.0%
   921                           ;!SFR27                0      0       0      28        0.0%
   922                           ;!BITSFR28             0      0       0      29        0.0%
   923                           ;!SFR28                0      0       0      29        0.0%
   924                           ;!BITSFR29             0      0       0      30        0.0%
   925                           ;!SFR29                0      0       0      30        0.0%
   926                           ;!BITSFR30             0      0       0      31        0.0%
   927                           ;!SFR30                0      0       0      31        0.0%
   928                           ;!BITSFR31             0      0       0      32        0.0%
   929                           ;!SFR31                0      0       0      32        0.0%
   930                           
   931                           	global	_main
   932                           
   933 ;; *************** function _main *****************
   934 ;; Defined at:
   935 ;;		line 46 in file "main.c"
   936 ;; Parameters:    Size  Location     Type
   937 ;;		None
   938 ;; Auto vars:     Size  Location     Type
   939 ;;		None
   940 ;; Return value:  Size  Location     Type
   941 ;;                  1    wreg      void 
   942 ;; Registers used:
   943 ;;		wreg, status,2, status,0, pclath, cstack
   944 ;; Tracked objects:
   945 ;;		On entry : B1F/0
   946 ;;		On exit  : 0/0
   947 ;;		Unchanged: 0/0
   948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   949 ;;      Params:         0       0       0       0
   950 ;;      Locals:         0       0       0       0
   951 ;;      Temps:          0       5       0       0
   952 ;;      Totals:         0       5       0       0
   953 ;;Total ram usage:        5 bytes
   954 ;; Hardware stack levels required when called:    2
   955 ;; This function calls:
   956 ;;		_UART_send_char
   957 ;;		_UART_send_uint16_4dec
   958 ;;		_delay
   959 ;; This function is called by:
   960 ;;		Startup code after reset
   961 ;; This function uses a non-reentrant model
   962 ;;
   963                           psect	maintext,global,class=CODE,delta=2,merge=1,split=1,group=0
   964                           	file	"main.c"
   965                           	line	46
   966                           global __pmaintext
   967                           __pmaintext:	;psect for function _main
   968  072E                     psect	maintext
   969                           	file	"main.c"
   970                           	line	46
   971                           	global	__size_of_main
   972                           	__size_of_main	equ	__end_of_main-_main
   973  00C8                     	
   974                           _main:	
   975  072E                     ;incstack = 0
   976                           	opt	stack 14
   977                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   978                           	line	47
   979                           	
   980                           l862:	
   981  072E                     ;main.c: 47:     OSCCON = 0x73;
   982                           	movlw	low(073h)
   983  072E  3073               	movlb 1	; select bank1
   984  072F  0021               	movwf	(153)^080h	;volatile
   985  0730  0099               	line	48
   986                           ;main.c: 48:     while (OSCSTATbits.HFIOFS == 0) {}
   987                           	goto	l73
   988  0731  2F32               	
   989                           l74:	
   990  0732                     	
   991                           l73:	
   992  0732                     	btfss	(154)^080h,0	;volatile
   993  0732  1C1A               	goto	u391
   994  0733  2F35               	goto	u390
   995  0734  2F36               u391:
   996  0735                     	goto	l73
   997  0735  2F32               u390:
   998  0736                     	goto	l864
   999  0736  2F37               	
  1000                           l75:	
  1001  0737                     	line	50
  1002                           	
  1003                           l864:	
  1004  0737                     ;main.c: 50:     PORTA = 0x00;
  1005                           	movlb 0	; select bank0
  1006  0737  0020               	clrf	(12)	;volatile
  1007  0738  018C               	line	51
  1008                           ;main.c: 51:     LATA = 0x00;
  1009                           	movlb 2	; select bank2
  1010  0739  0022               	clrf	(268)^0100h	;volatile
  1011  073A  018C               	line	52
  1012                           	
  1013                           l866:	
  1014  073B                     ;main.c: 52:     TRISA = 0xFF;
  1015                           	movlw	low(0FFh)
  1016  073B  30FF               	movlb 1	; select bank1
  1017  073C  0021               	movwf	(140)^080h	;volatile
  1018  073D  008C               	line	53
  1019                           	
  1020                           l868:	
  1021  073E                     ;main.c: 53:     TRISAbits.TRISA0 = 0;
  1022                           	bcf	(140)^080h,0	;volatile
  1023  073E  100C               	line	55
  1024                           	
  1025                           l870:	
  1026  073F                     ;main.c: 55:     LATAbits.LATA5 = 1;
  1027                           	movlb 2	; select bank2
  1028  073F  0022               	bsf	(268)^0100h,5	;volatile
  1029  0740  168C               	line	56
  1030                           	
  1031                           l872:	
  1032  0741                     ;main.c: 56:     TRISAbits.TRISA5 = 0;
  1033                           	movlb 1	; select bank1
  1034  0741  0021               	bcf	(140)^080h,5	;volatile
  1035  0742  128C               	line	58
  1036                           	
  1037                           l874:	
  1038  0743                     ;main.c: 58:     TXSTA = 0x84;
  1039                           	movlw	low(084h)
  1040  0743  3084               	movlb 3	; select bank3
  1041  0744  0023               	movwf	(414)^0180h	;volatile
  1042  0745  009E               	line	59
  1043                           	
  1044                           l876:	
  1045  0746                     ;main.c: 59:     RCSTA = 0x80;
  1046                           	movlw	low(080h)
  1047  0746  3080               	movwf	(413)^0180h	;volatile
  1048  0747  009D               	line	60
  1049                           	
  1050                           l878:	
  1051  0748                     ;main.c: 60:     BAUDCON = 0x00;
  1052                           	clrf	(415)^0180h	;volatile
  1053  0748  019F               	line	62
  1054                           	
  1055                           l880:	
  1056  0749                     ;main.c: 62:     TXSTAbits.BRGH = 1;
  1057                           	bsf	(414)^0180h,2	;volatile
  1058  0749  151E               	line	63
  1059                           	
  1060                           l882:	
  1061  074A                     ;main.c: 63:     BAUDCONbits.BRG16 = 1;
  1062                           	bsf	(415)^0180h,3	;volatile
  1063  074A  159F               	line	65
  1064                           ;main.c: 65:     SPBRG = 0x67;
  1065                           	movlw	low(067h)
  1066  074B  3067               	movwf	(411)^0180h	;volatile
  1067  074C  009B               	line	67
  1068                           	
  1069                           l884:	
  1070  074D                     ;main.c: 67:     TXSTAbits.TXEN = 1;
  1071                           	bsf	(414)^0180h,5	;volatile
  1072  074D  169E               	line	70
  1073                           	
  1074                           l886:	
  1075  074E                     ;main.c: 70:     OPTION_REGbits.TMR0CS = 0;
  1076                           	movlb 1	; select bank1
  1077  074E  0021               	bcf	(149)^080h,5	;volatile
  1078  074F  1295               	line	71
  1079                           	
  1080                           l888:	
  1081  0750                     ;main.c: 71:     OPTION_REGbits.PSA = 0;
  1082                           	bcf	(149)^080h,3	;volatile
  1083  0750  1195               	line	72
  1084                           	
  1085                           l890:	
  1086  0751                     ;main.c: 72:     OPTION_REGbits.PS = 0x2;
  1087                           	movf	(149)^080h,w	;volatile
  1088  0751  0815               	andlw	not (((1<<3)-1)<<0)
  1089  0752  39F8               	iorlw	(02h & ((1<<3)-1))<<0
  1090  0753  3802               	movwf	(149)^080h	;volatile
  1091  0754  0095               	line	75
  1092                           	
  1093                           l892:	
  1094  0755                     ;main.c: 75:     ADCON0 = 0x00;
  1095                           	clrf	(157)^080h	;volatile
  1096  0755  019D               	line	76
  1097                           	
  1098                           l894:	
  1099  0756                     ;main.c: 76:     ADCON1 = (0x80 | 0x03);
  1100                           	movlw	low(083h)
  1101  0756  3083               	movwf	(158)^080h	;volatile
  1102  0757  009E               	line	77
  1103                           	
  1104                           l896:	
  1105  0758                     ;main.c: 77:     ADCON1bits.ADCS = 0x05;
  1106                           	movf	(158)^080h,w	;volatile
  1107  0758  081E               	andlw	not (((1<<3)-1)<<4)
  1108  0759  398F               	iorlw	(05h & ((1<<3)-1))<<4
  1109  075A  3850               	movwf	(158)^080h	;volatile
  1110  075B  009E               	line	78
  1111                           	
  1112                           l898:	
  1113  075C                     ;main.c: 78:     ADCON0bits.ADON = 1;
  1114                           	bsf	(157)^080h,0	;volatile
  1115  075C  141D               	line	80
  1116                           	
  1117                           l900:	
  1118  075D                     ;main.c: 80:     FVRCON = 0xF0;
  1119                           	movlw	low(0F0h)
  1120  075D  30F0               	movlb 2	; select bank2
  1121  075E  0022               	movwf	(279)^0100h	;volatile
  1122  075F  0097               	line	81
  1123                           	
  1124                           l902:	
  1125  0760                     ;main.c: 81:     delay(10);
  1126                           	movlw	0Ah
  1127  0760  300A               	movwf	(delay@ms)
  1128  0761  00F0               	movlw	0
  1129  0762  3000               	movwf	((delay@ms))+1
  1130  0763  00F1               	fcall	_delay
  1131  0764  3186  2624  3187   	goto	l904
  1132  0767  2F68               	line	83
  1133                           ;main.c: 83:     while (1) {
  1134                           	
  1135                           l76:	
  1136  0768                     	line	85
  1137                           	
  1138                           l904:	
  1139  0768                     ;main.c: 85:         FVRCONbits.ADFVR = 0x01;;
  1140                           	movlb 2	; select bank2
  1141  0768  0022               	movf	(279)^0100h,w	;volatile
  1142  0769  0817               	andlw	not (((1<<2)-1)<<0)
  1143  076A  39FC               	iorlw	(01h & ((1<<2)-1))<<0
  1144  076B  3801               	movwf	(279)^0100h	;volatile
  1145  076C  0097               	line	86
  1146                           	
  1147                           l906:	
  1148  076D                     ;main.c: 86:         ADCON0bits.CHS = 0x03;
  1149                           	movlb 1	; select bank1
  1150  076D  0021               	movf	(157)^080h,w	;volatile
  1151  076E  081D               	andlw	not (((1<<5)-1)<<2)
  1152  076F  3983               	iorlw	(03h & ((1<<5)-1))<<2
  1153  0770  380C               	movwf	(157)^080h	;volatile
  1154  0771  009D               	line	87
  1155                           	
  1156                           l908:	
  1157  0772                     ;main.c: 87:         delay(1);
  1158                           	movlw	01h
  1159  0772  3001               	movwf	(delay@ms)
  1160  0773  00F0               	movlw	0
  1161  0774  3000               	movwf	((delay@ms))+1
  1162  0775  00F1               	fcall	_delay
  1163  0776  3186  2624  3187   	line	88
  1164                           	
  1165                           l910:	
  1166  0779                     ;main.c: 88:         ADCON0bits.ADGO = 1;
  1167                           	movlb 1	; select bank1
  1168  0779  0021               	bsf	(157)^080h,1	;volatile
  1169  077A  149D               	line	89
  1170                           ;main.c: 89:         while (ADCON0bits.ADGO == 1) {}
  1171                           	goto	l77
  1172  077B  2F7C               	
  1173                           l78:	
  1174  077C                     	
  1175                           l77:	
  1176  077C                     	btfsc	(157)^080h,1	;volatile
  1177  077C  189D               	goto	u401
  1178  077D  2F7F               	goto	u400
  1179  077E  2F80               u401:
  1180  077F                     	goto	l77
  1181  077F  2F7C               u400:
  1182  0780                     	goto	l912
  1183  0780  2F81               	
  1184                           l79:	
  1185  0781                     	line	90
  1186                           	
  1187                           l912:	
  1188  0781                     ;main.c: 90:         adc_ch1_val_msb = ADRESH;
  1189                           	movf	(156)^080h,w	;volatile
  1190  0781  081C               	movlb 0	; select bank0
  1191  0782  0020               	movwf	(??_main+0)+0
  1192  0783  00A0               	movf	(??_main+0)+0,w
  1193  0784  0820               	movwf	(_adc_ch1_val_msb)
  1194  0785  00FD               	line	91
  1195                           ;main.c: 91:         adc_ch1_val_lsb = ADRESL;
  1196                           	movlb 1	; select bank1
  1197  0786  0021               	movf	(155)^080h,w	;volatile
  1198  0787  081B               	movlb 0	; select bank0
  1199  0788  0020               	movwf	(??_main+0)+0
  1200  0789  00A0               	movf	(??_main+0)+0,w
  1201  078A  0820               	movwf	(_adc_ch1_val_lsb)
  1202  078B  00FC               	line	93
  1203                           	
  1204                           l914:	
  1205  078C                     ;main.c: 93:         FVRCONbits.ADFVR = 0x02;;
  1206                           	movlb 2	; select bank2
  1207  078C  0022               	movf	(279)^0100h,w	;volatile
  1208  078D  0817               	andlw	not (((1<<2)-1)<<0)
  1209  078E  39FC               	iorlw	(02h & ((1<<2)-1))<<0
  1210  078F  3802               	movwf	(279)^0100h	;volatile
  1211  0790  0097               	line	94
  1212                           	
  1213                           l916:	
  1214  0791                     ;main.c: 94:         ADCON0bits.CHS = 0x02;
  1215                           	movlb 1	; select bank1
  1216  0791  0021               	movf	(157)^080h,w	;volatile
  1217  0792  081D               	andlw	not (((1<<5)-1)<<2)
  1218  0793  3983               	iorlw	(02h & ((1<<5)-1))<<2
  1219  0794  3808               	movwf	(157)^080h	;volatile
  1220  0795  009D               	line	95
  1221                           	
  1222                           l918:	
  1223  0796                     ;main.c: 95:         delay(1);
  1224                           	movlw	01h
  1225  0796  3001               	movwf	(delay@ms)
  1226  0797  00F0               	movlw	0
  1227  0798  3000               	movwf	((delay@ms))+1
  1228  0799  00F1               	fcall	_delay
  1229  079A  3186  2624  3187   	line	96
  1230                           	
  1231                           l920:	
  1232  079D                     ;main.c: 96:         ADCON0bits.ADGO = 1;
  1233                           	movlb 1	; select bank1
  1234  079D  0021               	bsf	(157)^080h,1	;volatile
  1235  079E  149D               	line	97
  1236                           ;main.c: 97:         while (ADCON0bits.ADGO == 1) {}
  1237                           	goto	l80
  1238  079F  2FA0               	
  1239                           l81:	
  1240  07A0                     	
  1241                           l80:	
  1242  07A0                     	btfsc	(157)^080h,1	;volatile
  1243  07A0  189D               	goto	u411
  1244  07A1  2FA3               	goto	u410
  1245  07A2  2FA4               u411:
  1246  07A3                     	goto	l80
  1247  07A3  2FA0               u410:
  1248  07A4                     	goto	l922
  1249  07A4  2FA5               	
  1250                           l82:	
  1251  07A5                     	line	98
  1252                           	
  1253                           l922:	
  1254  07A5                     ;main.c: 98:         adc_ch2_val_msb = ADRESH;
  1255                           	movf	(156)^080h,w	;volatile
  1256  07A5  081C               	movlb 0	; select bank0
  1257  07A6  0020               	movwf	(??_main+0)+0
  1258  07A7  00A0               	movf	(??_main+0)+0,w
  1259  07A8  0820               	movwf	(_adc_ch2_val_msb)
  1260  07A9  00A8               	line	99
  1261                           ;main.c: 99:         adc_ch2_val_lsb = ADRESL;
  1262                           	movlb 1	; select bank1
  1263  07AA  0021               	movf	(155)^080h,w	;volatile
  1264  07AB  081B               	movlb 0	; select bank0
  1265  07AC  0020               	movwf	(??_main+0)+0
  1266  07AD  00A0               	movf	(??_main+0)+0,w
  1267  07AE  0820               	movwf	(_adc_ch2_val_lsb)
  1268  07AF  00A7               	line	110
  1269                           	
  1270                           l924:	
  1271  07B0                     ;main.c: 110:         UART_send_char('@');
  1272                           	movlw	low(040h)
  1273  07B0  3040               	fcall	_UART_send_char
  1274  07B1  3186  2617  3187   	line	111
  1275                           	
  1276                           l926:	
  1277  07B4                     ;main.c: 111:         UART_send_char('S');
  1278                           	movlw	low(053h)
  1279  07B4  3053               	fcall	_UART_send_char
  1280  07B5  3186  2617  3187   	line	112
  1281                           	
  1282                           l928:	
  1283  07B8                     ;main.c: 112:         UART_send_char('P');
  1284                           	movlw	low(050h)
  1285  07B8  3050               	fcall	_UART_send_char
  1286  07B9  3186  2617  3187   	line	113
  1287                           	
  1288                           l930:	
  1289  07BC                     ;main.c: 113:         UART_send_char('S');
  1290                           	movlw	low(053h)
  1291  07BC  3053               	fcall	_UART_send_char
  1292  07BD  3186  2617  3187   	line	120
  1293                           	
  1294                           l932:	
  1295  07C0                     ;main.c: 120:         UART_send_char(' ');
  1296                           	movlw	low(020h)
  1297  07C0  3020               	fcall	_UART_send_char
  1298  07C1  3186  2617  3187   	line	121
  1299                           	
  1300                           l934:	
  1301  07C4                     ;main.c: 121:         UART_send_uint16_4dec(adc_ch1_val_msb * 256 + adc_ch1_val_lsb);
  1302                           	movf	(_adc_ch1_val_lsb),w
  1303  07C4  087C               	movlb 0	; select bank0
  1304  07C5  0020               	movwf	(??_main+0)+0
  1305  07C6  00A0               	clrf	(??_main+0)+0+1
  1306  07C7  01A1               	movf	(_adc_ch1_val_msb),w
  1307  07C8  087D               	movwf	(??_main+2)+0
  1308  07C9  00A2               	clrf	(??_main+2)+0+1
  1309  07CA  01A3               	movf	(??_main+2)+0,w
  1310  07CB  0822               	movwf	(??_main+2)+1
  1311  07CC  00A3               	clrf	(??_main+2)+0
  1312  07CD  01A2               	movf	0+(??_main+0)+0,w
  1313  07CE  0820               	addwf	0+(??_main+2)+0,w
  1314  07CF  0722               	movwf	(UART_send_uint16_4dec@val)
  1315  07D0  00F8               	movf	1+(??_main+0)+0,w
  1316  07D1  0821               	addwfc	1+(??_main+2)+0,w
  1317  07D2  3D23               	movwf	1+(UART_send_uint16_4dec@val)
  1318  07D3  00F9               	fcall	_UART_send_uint16_4dec
  1319  07D4  3186  26BB  3187   	line	122
  1320                           	
  1321                           l936:	
  1322  07D7                     ;main.c: 122:         UART_send_char(' ');
  1323                           	movlw	low(020h)
  1324  07D7  3020               	fcall	_UART_send_char
  1325  07D8  3186  2617  3187   	line	123
  1326                           	
  1327                           l938:	
  1328  07DB                     ;main.c: 123:         UART_send_uint16_4dec((adc_ch2_val_msb * 256 + adc_ch2_val_lsb)*2)
                                 ;
  1329                           	movlb 0	; select bank0
  1330  07DB  0020               	lslf	(_adc_ch2_val_lsb),w
  1331  07DC  3527               	movwf	(UART_send_uint16_4dec@val)
  1332  07DD  00F8               	rlf	(_adc_ch2_val_msb),w
  1333  07DE  0D28               	movwf	1+(UART_send_uint16_4dec@val)
  1334  07DF  00F9               	fcall	_UART_send_uint16_4dec
  1335  07E0  3186  26BB  3187   	line	130
  1336                           	
  1337                           l940:	
  1338  07E3                     ;main.c: 130:         UART_send_char(0x0D);
  1339                           	movlw	low(0Dh)
  1340  07E3  300D               	fcall	_UART_send_char
  1341  07E4  3186  2617  3187   	line	131
  1342                           	
  1343                           l942:	
  1344  07E7                     ;main.c: 131:         UART_send_char(0x0A);
  1345                           	movlw	low(0Ah)
  1346  07E7  300A               	fcall	_UART_send_char
  1347  07E8  3186  2617  3187   	line	133
  1348                           	
  1349                           l944:	
  1350  07EB                     ;main.c: 133:         delay(1000);
  1351                           	movlw	0E8h
  1352  07EB  30E8               	movwf	(delay@ms)
  1353  07EC  00F0               	movlw	03h
  1354  07ED  3003               	movwf	((delay@ms))+1
  1355  07EE  00F1               	fcall	_delay
  1356  07EF  3186  2624  3187   	goto	l904
  1357  07F2  2F68               	line	135
  1358                           ;main.c: 135:     }
  1359                           	
  1360                           l83:	
  1361  07F3                     	goto	l904
  1362  07F3  2F68               	
  1363                           l84:	
  1364  07F4                     	line	136
  1365                           	
  1366                           l85:	
  1367  07F4                     	global	start
  1368                           	ljmp	start
  1369  07F4  3180  2802         	opt stack 0
  1370                           GLOBAL	__end_of_main
  1371                           	__end_of_main:
  1372  07F6                     	signat	_main,89
  1373                           	global	_delay
  1374                           
  1375 ;; *************** function _delay *****************
  1376 ;; Defined at:
  1377 ;;		line 138 in file "main.c"
  1378 ;; Parameters:    Size  Location     Type
  1379 ;;  ms              2    0[COMMON] unsigned short 
  1380 ;; Auto vars:     Size  Location     Type
  1381 ;;		None
  1382 ;; Return value:  Size  Location     Type
  1383 ;;                  1    wreg      void 
  1384 ;; Registers used:
  1385 ;;		wreg, status,2, status,0
  1386 ;; Tracked objects:
  1387 ;;		On entry : 0/0
  1388 ;;		On exit  : 0/0
  1389 ;;		Unchanged: 0/0
  1390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1391 ;;      Params:         2       0       0       0
  1392 ;;      Locals:         0       0       0       0
  1393 ;;      Temps:          0       0       0       0
  1394 ;;      Totals:         2       0       0       0
  1395 ;;Total ram usage:        2 bytes
  1396 ;; Hardware stack levels used:    1
  1397 ;; This function calls:
  1398 ;;		Nothing
  1399 ;; This function is called by:
  1400 ;;		_main
  1401 ;; This function uses a non-reentrant model
  1402 ;;
  1403                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  1404                           	line	138
  1405                           global __ptext1
  1406                           __ptext1:	;psect for function _delay
  1407  0624                     psect	text1
  1408                           	file	"main.c"
  1409                           	line	138
  1410                           	global	__size_of_delay
  1411                           	__size_of_delay	equ	__end_of_delay-_delay
  1412  0019                     	
  1413                           _delay:	
  1414  0624                     ;incstack = 0
  1415                           	opt	stack 15
  1416                           ; Regs used in _delay: [wreg+status,2+status,0]
  1417                           	line	140
  1418                           	
  1419                           l842:	
  1420  0624                     ;main.c: 140:     while (ms != 0) {
  1421                           	goto	l848
  1422  0624  2E35               	
  1423                           l89:	
  1424  0625                     	line	141
  1425                           ;main.c: 141:         INTCONbits.TMR0IF = 0;
  1426                           	bcf	(11),2	;volatile
  1427  0625  110B               	line	142
  1428                           	
  1429                           l844:	
  1430  0626                     ;main.c: 142:         TMR0 = 0x05;
  1431                           	movlw	low(05h)
  1432  0626  3005               	movlb 0	; select bank0
  1433  0627  0020               	movwf	(21)	;volatile
  1434  0628  0095               	line	143
  1435                           # 143 "main.c"
  1436                           NOP ;# 
  1437  0629  0000               psect	text1
  1438                           	line	144
  1439                           ;main.c: 144:         while (INTCONbits.TMR0IF == 0) {}
  1440                           	goto	l90
  1441  062A  2E2B               	
  1442                           l91:	
  1443  062B                     	
  1444                           l90:	
  1445  062B                     	btfss	(11),2	;volatile
  1446  062B  1D0B               	goto	u361
  1447  062C  2E2E               	goto	u360
  1448  062D  2E2F               u361:
  1449  062E                     	goto	l90
  1450  062E  2E2B               u360:
  1451  062F                     	goto	l846
  1452  062F  2E30               	
  1453                           l92:	
  1454  0630                     	line	145
  1455                           	
  1456                           l846:	
  1457  0630                     ;main.c: 145:         ms--;
  1458                           	movlw	01h
  1459  0630  3001               	subwf	(delay@ms),f
  1460  0631  02F0               	movlw	0
  1461  0632  3000               	subwfb	(delay@ms+1),f
  1462  0633  3BF1               	goto	l848
  1463  0634  2E35               	line	146
  1464                           ;main.c: 146:     }
  1465                           	
  1466                           l88:	
  1467  0635                     	line	140
  1468                           	
  1469                           l848:	
  1470  0635                     ;main.c: 140:     while (ms != 0) {
  1471                           	movf	((delay@ms)),w
  1472  0635  0870               iorwf	((delay@ms+1)),w
  1473  0636  0471               	btfss	status,2
  1474  0637  1D03               	goto	u371
  1475  0638  2E3A               	goto	u370
  1476  0639  2E3B               u371:
  1477  063A                     	goto	l89
  1478  063A  2E25               u370:
  1479  063B                     	goto	l94
  1480  063B  2E3C               	
  1481                           l93:	
  1482  063C                     	line	147
  1483                           	
  1484                           l94:	
  1485  063C                     	return
  1486  063C  0008               	opt stack 0
  1487                           GLOBAL	__end_of_delay
  1488                           	__end_of_delay:
  1489  063D                     	signat	_delay,4217
  1490                           	global	_UART_send_uint16_4dec
  1491                           
  1492 ;; *************** function _UART_send_uint16_4dec *****************
  1493 ;; Defined at:
  1494 ;;		line 168 in file "main.c"
  1495 ;; Parameters:    Size  Location     Type
  1496 ;;  val             2    8[COMMON] unsigned short 
  1497 ;; Auto vars:     Size  Location     Type
  1498 ;;  toSend          1   11[COMMON] unsigned char 
  1499 ;; Return value:  Size  Location     Type
  1500 ;;                  1    wreg      void 
  1501 ;; Registers used:
  1502 ;;		wreg, status,2, status,0, pclath, cstack
  1503 ;; Tracked objects:
  1504 ;;		On entry : 0/0
  1505 ;;		On exit  : 0/0
  1506 ;;		Unchanged: 0/0
  1507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1508 ;;      Params:         2       0       0       0
  1509 ;;      Locals:         1       0       0       0
  1510 ;;      Temps:          1       0       0       0
  1511 ;;      Totals:         4       0       0       0
  1512 ;;Total ram usage:        4 bytes
  1513 ;; Hardware stack levels used:    1
  1514 ;; Hardware stack levels required when called:    1
  1515 ;; This function calls:
  1516 ;;		_UART_send_char
  1517 ;;		___lwdiv
  1518 ;;		___lwmod
  1519 ;; This function is called by:
  1520 ;;		_main
  1521 ;; This function uses a non-reentrant model
  1522 ;;
  1523                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  1524                           	line	168
  1525                           global __ptext2
  1526                           __ptext2:	;psect for function _UART_send_uint16_4dec
  1527  06BB                     psect	text2
  1528                           	file	"main.c"
  1529                           	line	168
  1530                           	global	__size_of_UART_send_uint16_4dec
  1531                           	__size_of_UART_send_uint16_4dec	equ	__end_of_UART_send_uint16_4dec-_UART_send_uint16_4d
                                 ec
  1532  0073                     	
  1533                           _UART_send_uint16_4dec:	
  1534  06BB                     ;incstack = 0
  1535                           	opt	stack 14
  1536                           ; Regs used in _UART_send_uint16_4dec: [wreg+status,2+status,0+pclath+cstack]
  1537                           	line	169
  1538                           	
  1539                           l850:	
  1540  06BB                     ;main.c: 169:     uint8_t toSend = val / 1000;
  1541                           	movlw	0E8h
  1542  06BB  30E8               	movwf	(___lwdiv@divisor)
  1543  06BC  00F0               	movlw	03h
  1544  06BD  3003               	movwf	((___lwdiv@divisor))+1
  1545  06BE  00F1               	movf	(UART_send_uint16_4dec@val+1),w
  1546  06BF  0879               	movwf	(___lwdiv@dividend+1)
  1547  06C0  00F3               	movf	(UART_send_uint16_4dec@val),w
  1548  06C1  0878               	movwf	(___lwdiv@dividend)
  1549  06C2  00F2               	fcall	___lwdiv
  1550  06C3  3186  2678  3186   	movf	(0+(?___lwdiv)),w
  1551  06C6  0870               	movwf	(??_UART_send_uint16_4dec+0)+0
  1552  06C7  00FA               	movf	(??_UART_send_uint16_4dec+0)+0,w
  1553  06C8  087A               	movwf	(UART_send_uint16_4dec@toSend)
  1554  06C9  00FB               	line	170
  1555                           ;main.c: 170:     val = val % 1000;
  1556                           	movlw	0E8h
  1557  06CA  30E8               	movwf	(___lwmod@divisor)
  1558  06CB  00F0               	movlw	03h
  1559  06CC  3003               	movwf	((___lwmod@divisor))+1
  1560  06CD  00F1               	movf	(UART_send_uint16_4dec@val+1),w
  1561  06CE  0879               	movwf	(___lwmod@dividend+1)
  1562  06CF  00F3               	movf	(UART_send_uint16_4dec@val),w
  1563  06D0  0878               	movwf	(___lwmod@dividend)
  1564  06D1  00F2               	fcall	___lwmod
  1565  06D2  3186  263D  3186   	movf	(1+(?___lwmod)),w
  1566  06D5  0871               	movwf	(UART_send_uint16_4dec@val+1)
  1567  06D6  00F9               	movf	(0+(?___lwmod)),w
  1568  06D7  0870               	movwf	(UART_send_uint16_4dec@val)
  1569  06D8  00F8               	line	171
  1570                           ;main.c: 171:     UART_send_char(toSend + 0x30);
  1571                           	movf	(UART_send_uint16_4dec@toSend),w
  1572  06D9  087B               	addlw	030h
  1573  06DA  3E30               	fcall	_UART_send_char
  1574  06DB  3186  2617  3186   	line	172
  1575                           ;main.c: 172:     toSend = val / 100;
  1576                           	movlw	064h
  1577  06DE  3064               	movwf	(___lwdiv@divisor)
  1578  06DF  00F0               	movlw	0
  1579  06E0  3000               	movwf	((___lwdiv@divisor))+1
  1580  06E1  00F1               	movf	(UART_send_uint16_4dec@val+1),w
  1581  06E2  0879               	movwf	(___lwdiv@dividend+1)
  1582  06E3  00F3               	movf	(UART_send_uint16_4dec@val),w
  1583  06E4  0878               	movwf	(___lwdiv@dividend)
  1584  06E5  00F2               	fcall	___lwdiv
  1585  06E6  3186  2678  3186   	movf	(0+(?___lwdiv)),w
  1586  06E9  0870               	movwf	(??_UART_send_uint16_4dec+0)+0
  1587  06EA  00FA               	movf	(??_UART_send_uint16_4dec+0)+0,w
  1588  06EB  087A               	movwf	(UART_send_uint16_4dec@toSend)
  1589  06EC  00FB               	line	173
  1590                           ;main.c: 173:     val = val % 100;
  1591                           	movlw	064h
  1592  06ED  3064               	movwf	(___lwmod@divisor)
  1593  06EE  00F0               	movlw	0
  1594  06EF  3000               	movwf	((___lwmod@divisor))+1
  1595  06F0  00F1               	movf	(UART_send_uint16_4dec@val+1),w
  1596  06F1  0879               	movwf	(___lwmod@dividend+1)
  1597  06F2  00F3               	movf	(UART_send_uint16_4dec@val),w
  1598  06F3  0878               	movwf	(___lwmod@dividend)
  1599  06F4  00F2               	fcall	___lwmod
  1600  06F5  3186  263D  3186   	movf	(1+(?___lwmod)),w
  1601  06F8  0871               	movwf	(UART_send_uint16_4dec@val+1)
  1602  06F9  00F9               	movf	(0+(?___lwmod)),w
  1603  06FA  0870               	movwf	(UART_send_uint16_4dec@val)
  1604  06FB  00F8               	line	174
  1605                           ;main.c: 174:     UART_send_char(toSend + 0x30);
  1606                           	movf	(UART_send_uint16_4dec@toSend),w
  1607  06FC  087B               	addlw	030h
  1608  06FD  3E30               	fcall	_UART_send_char
  1609  06FE  3186  2617  3186   	line	175
  1610                           ;main.c: 175:     toSend = val / 10;
  1611                           	movlw	0Ah
  1612  0701  300A               	movwf	(___lwdiv@divisor)
  1613  0702  00F0               	movlw	0
  1614  0703  3000               	movwf	((___lwdiv@divisor))+1
  1615  0704  00F1               	movf	(UART_send_uint16_4dec@val+1),w
  1616  0705  0879               	movwf	(___lwdiv@dividend+1)
  1617  0706  00F3               	movf	(UART_send_uint16_4dec@val),w
  1618  0707  0878               	movwf	(___lwdiv@dividend)
  1619  0708  00F2               	fcall	___lwdiv
  1620  0709  3186  2678  3186   	movf	(0+(?___lwdiv)),w
  1621  070C  0870               	movwf	(??_UART_send_uint16_4dec+0)+0
  1622  070D  00FA               	movf	(??_UART_send_uint16_4dec+0)+0,w
  1623  070E  087A               	movwf	(UART_send_uint16_4dec@toSend)
  1624  070F  00FB               	line	176
  1625                           ;main.c: 176:     val = val % 10;
  1626                           	movlw	0Ah
  1627  0710  300A               	movwf	(___lwmod@divisor)
  1628  0711  00F0               	movlw	0
  1629  0712  3000               	movwf	((___lwmod@divisor))+1
  1630  0713  00F1               	movf	(UART_send_uint16_4dec@val+1),w
  1631  0714  0879               	movwf	(___lwmod@dividend+1)
  1632  0715  00F3               	movf	(UART_send_uint16_4dec@val),w
  1633  0716  0878               	movwf	(___lwmod@dividend)
  1634  0717  00F2               	fcall	___lwmod
  1635  0718  3186  263D  3186   	movf	(1+(?___lwmod)),w
  1636  071B  0871               	movwf	(UART_send_uint16_4dec@val+1)
  1637  071C  00F9               	movf	(0+(?___lwmod)),w
  1638  071D  0870               	movwf	(UART_send_uint16_4dec@val)
  1639  071E  00F8               	line	177
  1640                           ;main.c: 177:     UART_send_char(toSend + 0x30);
  1641                           	movf	(UART_send_uint16_4dec@toSend),w
  1642  071F  087B               	addlw	030h
  1643  0720  3E30               	fcall	_UART_send_char
  1644  0721  3186  2617  3186   	line	178
  1645                           	
  1646                           l852:	
  1647  0724                     ;main.c: 178:     toSend = val;
  1648                           	movf	(UART_send_uint16_4dec@val),w
  1649  0724  0878               	movwf	(??_UART_send_uint16_4dec+0)+0
  1650  0725  00FA               	movf	(??_UART_send_uint16_4dec+0)+0,w
  1651  0726  087A               	movwf	(UART_send_uint16_4dec@toSend)
  1652  0727  00FB               	line	179
  1653                           	
  1654                           l854:	
  1655  0728                     ;main.c: 179:     UART_send_char(toSend + 0x30);
  1656                           	movf	(UART_send_uint16_4dec@toSend),w
  1657  0728  087B               	addlw	030h
  1658  0729  3E30               	fcall	_UART_send_char
  1659  072A  3186  2617  3186   	line	180
  1660                           	
  1661                           l111:	
  1662  072D                     	return
  1663  072D  0008               	opt stack 0
  1664                           GLOBAL	__end_of_UART_send_uint16_4dec
  1665                           	__end_of_UART_send_uint16_4dec:
  1666  072E                     	signat	_UART_send_uint16_4dec,4217
  1667                           	global	___lwmod
  1668                           
  1669 ;; *************** function ___lwmod *****************
  1670 ;; Defined at:
  1671 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwmod.c"
  1672 ;; Parameters:    Size  Location     Type
  1673 ;;  divisor         2    0[COMMON] unsigned int 
  1674 ;;  dividend        2    2[COMMON] unsigned int 
  1675 ;; Auto vars:     Size  Location     Type
  1676 ;;  counter         1    5[COMMON] unsigned char 
  1677 ;; Return value:  Size  Location     Type
  1678 ;;                  2    0[COMMON] unsigned int 
  1679 ;; Registers used:
  1680 ;;		wreg, status,2, status,0
  1681 ;; Tracked objects:
  1682 ;;		On entry : 0/0
  1683 ;;		On exit  : 0/0
  1684 ;;		Unchanged: 0/0
  1685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1686 ;;      Params:         4       0       0       0
  1687 ;;      Locals:         1       0       0       0
  1688 ;;      Temps:          1       0       0       0
  1689 ;;      Totals:         6       0       0       0
  1690 ;;Total ram usage:        6 bytes
  1691 ;; Hardware stack levels used:    1
  1692 ;; This function calls:
  1693 ;;		Nothing
  1694 ;; This function is called by:
  1695 ;;		_UART_send_uint16_4dec
  1696 ;; This function uses a non-reentrant model
  1697 ;;
  1698                           psect	text3,local,class=CODE,delta=2,merge=1,group=1
  1699                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwmod.c"
  1700                           	line	5
  1701                           global __ptext3
  1702                           __ptext3:	;psect for function ___lwmod
  1703  063D                     psect	text3
  1704                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwmod.c"
  1705                           	line	5
  1706                           	global	__size_of___lwmod
  1707                           	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  1708  003B                     	
  1709                           ___lwmod:	
  1710  063D                     ;incstack = 0
  1711                           	opt	stack 14
  1712                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1713                           	line	12
  1714                           	
  1715                           l820:	
  1716  063D                     	movf	((___lwmod@divisor)),w
  1717  063D  0870               iorwf	((___lwmod@divisor+1)),w
  1718  063E  0471               	btfsc	status,2
  1719  063F  1903               	goto	u301
  1720  0640  2E42               	goto	u300
  1721  0641  2E43               u301:
  1722  0642                     	goto	l838
  1723  0642  2E72               u300:
  1724  0643                     	line	13
  1725                           	
  1726                           l822:	
  1727  0643                     	clrf	(___lwmod@counter)
  1728  0643  01F5               	incf	(___lwmod@counter),f
  1729  0644  0AF5               	line	14
  1730                           	goto	l828
  1731  0645  2E50               	
  1732                           l482:	
  1733  0646                     	line	15
  1734                           	
  1735                           l824:	
  1736  0646                     	movlw	01h
  1737  0646  3001               	
  1738                           u315:
  1739  0647                     	lslf	(___lwmod@divisor),f
  1740  0647  35F0               	rlf	(___lwmod@divisor+1),f
  1741  0648  0DF1               	decfsz	wreg,f
  1742  0649  0B89               	goto	u315
  1743  064A  2E47               	line	16
  1744                           	
  1745                           l826:	
  1746  064B                     	movlw	low(01h)
  1747  064B  3001               	movwf	(??___lwmod+0)+0
  1748  064C  00F4               	movf	(??___lwmod+0)+0,w
  1749  064D  0874               	addwf	(___lwmod@counter),f
  1750  064E  07F5               	goto	l828
  1751  064F  2E50               	line	17
  1752                           	
  1753                           l481:	
  1754  0650                     	line	14
  1755                           	
  1756                           l828:	
  1757  0650                     	btfss	(___lwmod@divisor+1),(15)&7
  1758  0650  1FF1               	goto	u321
  1759  0651  2E53               	goto	u320
  1760  0652  2E54               u321:
  1761  0653                     	goto	l824
  1762  0653  2E46               u320:
  1763  0654                     	goto	l830
  1764  0654  2E56               	
  1765                           l483:	
  1766  0655                     	goto	l830
  1767  0655  2E56               	line	18
  1768                           	
  1769                           l484:	
  1770  0656                     	line	19
  1771                           	
  1772                           l830:	
  1773  0656                     	movf	(___lwmod@divisor+1),w
  1774  0656  0871               	subwf	(___lwmod@dividend+1),w
  1775  0657  0273               	skipz
  1776  0658  1D03               	goto	u335
  1777  0659  2E5C               	movf	(___lwmod@divisor),w
  1778  065A  0870               	subwf	(___lwmod@dividend),w
  1779  065B  0272               u335:
  1780  065C                     	skipc
  1781  065C  1C03               	goto	u331
  1782  065D  2E5F               	goto	u330
  1783  065E  2E60               u331:
  1784  065F                     	goto	l834
  1785  065F  2E65               u330:
  1786  0660                     	line	20
  1787                           	
  1788                           l832:	
  1789  0660                     	movf	(___lwmod@divisor),w
  1790  0660  0870               	subwf	(___lwmod@dividend),f
  1791  0661  02F2               	movf	(___lwmod@divisor+1),w
  1792  0662  0871               	subwfb	(___lwmod@dividend+1),f
  1793  0663  3BF3               	goto	l834
  1794  0664  2E65               	
  1795                           l485:	
  1796  0665                     	line	21
  1797                           	
  1798                           l834:	
  1799  0665                     	movlw	01h
  1800  0665  3001               	
  1801                           u345:
  1802  0666                     	lsrf	(___lwmod@divisor+1),f
  1803  0666  36F1               	rrf	(___lwmod@divisor),f
  1804  0667  0CF0               	decfsz	wreg,f
  1805  0668  0B89               	goto	u345
  1806  0669  2E66               	line	22
  1807                           	
  1808                           l836:	
  1809  066A                     	movlw	01h
  1810  066A  3001               	subwf	(___lwmod@counter),f
  1811  066B  02F5               	btfss	status,2
  1812  066C  1D03               	goto	u351
  1813  066D  2E6F               	goto	u350
  1814  066E  2E70               u351:
  1815  066F                     	goto	l830
  1816  066F  2E56               u350:
  1817  0670                     	goto	l838
  1818  0670  2E72               	
  1819                           l486:	
  1820  0671                     	goto	l838
  1821  0671  2E72               	line	23
  1822                           	
  1823                           l480:	
  1824  0672                     	line	24
  1825                           	
  1826                           l838:	
  1827  0672                     	movf	(___lwmod@dividend+1),w
  1828  0672  0873               	movwf	(?___lwmod+1)
  1829  0673  00F1               	movf	(___lwmod@dividend),w
  1830  0674  0872               	movwf	(?___lwmod)
  1831  0675  00F0               	goto	l487
  1832  0676  2E77               	
  1833                           l840:	
  1834  0677                     	line	25
  1835                           	
  1836                           l487:	
  1837  0677                     	return
  1838  0677  0008               	opt stack 0
  1839                           GLOBAL	__end_of___lwmod
  1840                           	__end_of___lwmod:
  1841  0678                     	signat	___lwmod,8314
  1842                           	global	___lwdiv
  1843                           
  1844 ;; *************** function ___lwdiv *****************
  1845 ;; Defined at:
  1846 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwdiv.c"
  1847 ;; Parameters:    Size  Location     Type
  1848 ;;  divisor         2    0[COMMON] unsigned int 
  1849 ;;  dividend        2    2[COMMON] unsigned int 
  1850 ;; Auto vars:     Size  Location     Type
  1851 ;;  quotient        2    5[COMMON] unsigned int 
  1852 ;;  counter         1    7[COMMON] unsigned char 
  1853 ;; Return value:  Size  Location     Type
  1854 ;;                  2    0[COMMON] unsigned int 
  1855 ;; Registers used:
  1856 ;;		wreg, status,2, status,0
  1857 ;; Tracked objects:
  1858 ;;		On entry : 0/0
  1859 ;;		On exit  : 0/0
  1860 ;;		Unchanged: 0/0
  1861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1862 ;;      Params:         4       0       0       0
  1863 ;;      Locals:         3       0       0       0
  1864 ;;      Temps:          1       0       0       0
  1865 ;;      Totals:         8       0       0       0
  1866 ;;Total ram usage:        8 bytes
  1867 ;; Hardware stack levels used:    1
  1868 ;; This function calls:
  1869 ;;		Nothing
  1870 ;; This function is called by:
  1871 ;;		_UART_send_uint16_4dec
  1872 ;; This function uses a non-reentrant model
  1873 ;;
  1874                           psect	text4,local,class=CODE,delta=2,merge=1,group=1
  1875                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwdiv.c"
  1876                           	line	5
  1877                           global __ptext4
  1878                           __ptext4:	;psect for function ___lwdiv
  1879  0678                     psect	text4
  1880                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwdiv.c"
  1881                           	line	5
  1882                           	global	__size_of___lwdiv
  1883                           	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  1884  0043                     	
  1885                           ___lwdiv:	
  1886  0678                     ;incstack = 0
  1887                           	opt	stack 14
  1888                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1889                           	line	13
  1890                           	
  1891                           l794:	
  1892  0678                     	clrf	(___lwdiv@quotient)
  1893  0678  01F5               	clrf	(___lwdiv@quotient+1)
  1894  0679  01F6               	line	14
  1895                           	
  1896                           l796:	
  1897  067A                     	movf	((___lwdiv@divisor)),w
  1898  067A  0870               iorwf	((___lwdiv@divisor+1)),w
  1899  067B  0471               	btfsc	status,2
  1900  067C  1903               	goto	u231
  1901  067D  2E7F               	goto	u230
  1902  067E  2E80               u231:
  1903  067F                     	goto	l816
  1904  067F  2EB5               u230:
  1905  0680                     	line	15
  1906                           	
  1907                           l798:	
  1908  0680                     	clrf	(___lwdiv@counter)
  1909  0680  01F7               	incf	(___lwdiv@counter),f
  1910  0681  0AF7               	line	16
  1911                           	goto	l804
  1912  0682  2E8D               	
  1913                           l472:	
  1914  0683                     	line	17
  1915                           	
  1916                           l800:	
  1917  0683                     	movlw	01h
  1918  0683  3001               	
  1919                           u245:
  1920  0684                     	lslf	(___lwdiv@divisor),f
  1921  0684  35F0               	rlf	(___lwdiv@divisor+1),f
  1922  0685  0DF1               	decfsz	wreg,f
  1923  0686  0B89               	goto	u245
  1924  0687  2E84               	line	18
  1925                           	
  1926                           l802:	
  1927  0688                     	movlw	low(01h)
  1928  0688  3001               	movwf	(??___lwdiv+0)+0
  1929  0689  00F4               	movf	(??___lwdiv+0)+0,w
  1930  068A  0874               	addwf	(___lwdiv@counter),f
  1931  068B  07F7               	goto	l804
  1932  068C  2E8D               	line	19
  1933                           	
  1934                           l471:	
  1935  068D                     	line	16
  1936                           	
  1937                           l804:	
  1938  068D                     	btfss	(___lwdiv@divisor+1),(15)&7
  1939  068D  1FF1               	goto	u251
  1940  068E  2E90               	goto	u250
  1941  068F  2E91               u251:
  1942  0690                     	goto	l800
  1943  0690  2E83               u250:
  1944  0691                     	goto	l806
  1945  0691  2E93               	
  1946                           l473:	
  1947  0692                     	goto	l806
  1948  0692  2E93               	line	20
  1949                           	
  1950                           l474:	
  1951  0693                     	line	21
  1952                           	
  1953                           l806:	
  1954  0693                     	movlw	01h
  1955  0693  3001               	
  1956                           u265:
  1957  0694                     	lslf	(___lwdiv@quotient),f
  1958  0694  35F5               	rlf	(___lwdiv@quotient+1),f
  1959  0695  0DF6               	decfsz	wreg,f
  1960  0696  0B89               	goto	u265
  1961  0697  2E94               	line	22
  1962                           	movf	(___lwdiv@divisor+1),w
  1963  0698  0871               	subwf	(___lwdiv@dividend+1),w
  1964  0699  0273               	skipz
  1965  069A  1D03               	goto	u275
  1966  069B  2E9E               	movf	(___lwdiv@divisor),w
  1967  069C  0870               	subwf	(___lwdiv@dividend),w
  1968  069D  0272               u275:
  1969  069E                     	skipc
  1970  069E  1C03               	goto	u271
  1971  069F  2EA1               	goto	u270
  1972  06A0  2EA2               u271:
  1973  06A1                     	goto	l812
  1974  06A1  2EA8               u270:
  1975  06A2                     	line	23
  1976                           	
  1977                           l808:	
  1978  06A2                     	movf	(___lwdiv@divisor),w
  1979  06A2  0870               	subwf	(___lwdiv@dividend),f
  1980  06A3  02F2               	movf	(___lwdiv@divisor+1),w
  1981  06A4  0871               	subwfb	(___lwdiv@dividend+1),f
  1982  06A5  3BF3               	line	24
  1983                           	
  1984                           l810:	
  1985  06A6                     	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  1986  06A6  1475               	goto	l812
  1987  06A7  2EA8               	line	25
  1988                           	
  1989                           l475:	
  1990  06A8                     	line	26
  1991                           	
  1992                           l812:	
  1993  06A8                     	movlw	01h
  1994  06A8  3001               	
  1995                           u285:
  1996  06A9                     	lsrf	(___lwdiv@divisor+1),f
  1997  06A9  36F1               	rrf	(___lwdiv@divisor),f
  1998  06AA  0CF0               	decfsz	wreg,f
  1999  06AB  0B89               	goto	u285
  2000  06AC  2EA9               	line	27
  2001                           	
  2002                           l814:	
  2003  06AD                     	movlw	01h
  2004  06AD  3001               	subwf	(___lwdiv@counter),f
  2005  06AE  02F7               	btfss	status,2
  2006  06AF  1D03               	goto	u291
  2007  06B0  2EB2               	goto	u290
  2008  06B1  2EB3               u291:
  2009  06B2                     	goto	l806
  2010  06B2  2E93               u290:
  2011  06B3                     	goto	l816
  2012  06B3  2EB5               	
  2013                           l476:	
  2014  06B4                     	goto	l816
  2015  06B4  2EB5               	line	28
  2016                           	
  2017                           l470:	
  2018  06B5                     	line	29
  2019                           	
  2020                           l816:	
  2021  06B5                     	movf	(___lwdiv@quotient+1),w
  2022  06B5  0876               	movwf	(?___lwdiv+1)
  2023  06B6  00F1               	movf	(___lwdiv@quotient),w
  2024  06B7  0875               	movwf	(?___lwdiv)
  2025  06B8  00F0               	goto	l477
  2026  06B9  2EBA               	
  2027                           l818:	
  2028  06BA                     	line	30
  2029                           	
  2030                           l477:	
  2031  06BA                     	return
  2032  06BA  0008               	opt stack 0
  2033                           GLOBAL	__end_of___lwdiv
  2034                           	__end_of___lwdiv:
  2035  06BB                     	signat	___lwdiv,8314
  2036                           	global	_UART_send_char
  2037                           
  2038 ;; *************** function _UART_send_char *****************
  2039 ;; Defined at:
  2040 ;;		line 149 in file "main.c"
  2041 ;; Parameters:    Size  Location     Type
  2042 ;;  data            1    wreg     unsigned char 
  2043 ;; Auto vars:     Size  Location     Type
  2044 ;;  data            1    0[COMMON] unsigned char 
  2045 ;; Return value:  Size  Location     Type
  2046 ;;                  1    wreg      void 
  2047 ;; Registers used:
  2048 ;;		wreg
  2049 ;; Tracked objects:
  2050 ;;		On entry : 0/0
  2051 ;;		On exit  : 0/0
  2052 ;;		Unchanged: 0/0
  2053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2054 ;;      Params:         0       0       0       0
  2055 ;;      Locals:         1       0       0       0
  2056 ;;      Temps:          0       0       0       0
  2057 ;;      Totals:         1       0       0       0
  2058 ;;Total ram usage:        1 bytes
  2059 ;; Hardware stack levels used:    1
  2060 ;; This function calls:
  2061 ;;		Nothing
  2062 ;; This function is called by:
  2063 ;;		_main
  2064 ;;		_UART_send_uint16_4dec
  2065 ;;		_UART_send_nah
  2066 ;; This function uses a non-reentrant model
  2067 ;;
  2068                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  2069                           	file	"main.c"
  2070                           	line	149
  2071                           global __ptext5
  2072                           __ptext5:	;psect for function _UART_send_char
  2073  0617                     psect	text5
  2074                           	file	"main.c"
  2075                           	line	149
  2076                           	global	__size_of_UART_send_char
  2077                           	__size_of_UART_send_char	equ	__end_of_UART_send_char-_UART_send_char
  2078  000D                     	
  2079                           _UART_send_char:	
  2080  0617                     ;incstack = 0
  2081                           	opt	stack 14
  2082                           ; Regs used in _UART_send_char: [wreg]
  2083                           ;UART_send_char@data stored from wreg
  2084                           	movwf	(UART_send_char@data)
  2085  0617  00F0               	line	150
  2086                           	
  2087                           l792:	
  2088  0618                     ;main.c: 150:     TXREG = data;
  2089                           	movf	(UART_send_char@data),w
  2090  0618  0870               	movlb 3	; select bank3
  2091  0619  0023               	movwf	(410)^0180h	;volatile
  2092  061A  009A               	line	151
  2093                           # 151 "main.c"
  2094                           NOP ;# 
  2095  061B  0000               psect	text5
  2096                           	line	152
  2097                           ;main.c: 152:     while (TXSTAbits.TRMT == 0) { };
  2098                           	goto	l97
  2099  061C  2E1D               	
  2100                           l98:	
  2101  061D                     	
  2102                           l97:	
  2103  061D                     	movlb 3	; select bank3
  2104  061D  0023               	btfss	(414)^0180h,1	;volatile
  2105  061E  1C9E               	goto	u221
  2106  061F  2E21               	goto	u220
  2107  0620  2E22               u221:
  2108  0621                     	goto	l97
  2109  0621  2E1D               u220:
  2110  0622                     	goto	l100
  2111  0622  2E23               	
  2112                           l99:	
  2113  0623                     	line	153
  2114                           	
  2115                           l100:	
  2116  0623                     	return
  2117  0623  0008               	opt stack 0
  2118                           GLOBAL	__end_of_UART_send_char
  2119                           	__end_of_UART_send_char:
  2120  0624                     	signat	_UART_send_char,4217
  2121                           global	___latbits
  2122                           ___latbits	equ	1
  2123  0001                     	global	btemp
  2124                           	btemp set 07Eh
  2125  007E                     
  2126                           	DABS	1,126,2	;btemp
  2127                           	global	wtemp0
  2128                           	wtemp0 set btemp+0
  2129  007E                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80      5       9
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_UART_send_uint16_4dec
    _UART_send_uint16_4dec->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    2005
                                              0 BANK0      5     5      0
                     _UART_send_char
              _UART_send_uint16_4dec
                              _delay
 ---------------------------------------------------------------------------------
 (1) _delay                                                2     0      2     327
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _UART_send_uint16_4dec                                4     2      2    1656
                                              8 COMMON     4     2      2
                     _UART_send_char
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     618
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _UART_send_char                                       1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_send_char
   _UART_send_uint16_4dec
     _UART_send_char
     ___lwdiv
     ___lwmod
   _delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      17       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      5       9       6       11.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      17      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Fri Jul 16 23:08:56 2021

                   __CFG_CP$OFF 0000                              l80 07A0                              l81 07A0  
                            l73 0732                              l90 062B                              l82 07A5  
                            l74 0732                              l91 062B                              l83 07F3  
                            l75 0737                              l92 0630                              l84 07F4  
                            l76 0768                              l93 063C                              l85 07F4  
                            l77 077C                              l94 063C                              l78 077C  
                            l79 0781                              l88 0635                              l97 061D  
                            l89 0625                              l98 061D                              l99 0623  
                           l100 0623                             l111 072D                             l470 06B5  
                           l471 068D                             l800 0683                             l472 0683  
                           l480 0672                             l473 0692                             l481 0650  
                           l810 06A6                             l474 0693                             l802 0688  
                           l482 0646                             l475 06A8                             l483 0655  
                           l476 06B4                             l812 06A8                             l804 068D  
                           l484 0656                             l820 063D                             l900 075D  
                           l477 06BA                             l485 0665                             l814 06AD  
                           l806 0693                             l486 0671                             l830 0656  
                           l822 0643                             l910 0779                             l902 0760  
                           l487 0677                             l808 06A2                             l816 06B5  
                           l840 0677                             l832 0660                             l824 0646  
                           l920 079D                             l912 0781                             l904 0768  
                           l818 06BA                             l834 0665                             l826 064B  
                           l850 06BB                             l842 0624                             l930 07BC  
                           l922 07A5                             l914 078C                             l906 076D  
                           l836 066A                             l828 0650                             l852 0724  
                           l844 0626                             l940 07E3                             l932 07C0  
                           l924 07B0                             l916 0791                             l908 0772  
                           l838 0672                             l854 0728                             l846 0630  
                           l942 07E7                             l934 07C4                             l926 07B4  
                           l918 0796                             l870 073F                             l862 072E  
                           l792 0618                             l848 0635                             l944 07EB  
                           l936 07D7                             l928 07B8                             l880 0749  
                           l872 0741                             l864 0737                             l794 0678  
                           l938 07DB                             l890 0751                             l882 074A  
                           l874 0743                             l866 073B                             l796 067A  
                           l892 0755                             l884 074D                             l876 0746  
                           l868 073E                             l798 0680                             l894 0756  
                           l886 074E                             l878 0748                             l896 0758  
                           l888 0750                             l898 075C                             u220 0622  
                           u300 0643                             u221 0621                             u301 0642  
                           u230 0680                             u231 067F                             u320 0654  
                           u400 0780                             u321 0653                             u401 077F  
                           u250 0691                             u330 0660                             u410 07A4  
                           u251 0690                             u331 065F                             u315 0647  
                           u411 07A3                             u245 0684                             u270 06A2  
                           u350 0670                             u271 06A1                             u351 066F  
                           u335 065C                             u360 062F                             u265 0694  
                           u345 0666                             u361 062E                             u290 06B3  
                           u370 063B                    __CFG_CPD$OFF 0000                             u291 06B2  
                           u275 069E                             u371 063A                             u285 06A9  
                           u390 0736                             u391 0735                    __CFG_BORV$LO 0000  
                           wreg 0009                    __CFG_LVP$OFF 0000                            _LATA 010C  
       ??_UART_send_uint16_4dec 007A                            _TMR0 0015                    __CFG_WRT$OFF 0000  
                 __CFG_FCMEN$ON 0000                            _main 072E                            btemp 007E  
                 __CFG_BOREN$ON 0000                            start 0002                   __CFG_IESO$OFF 0000  
                 __CFG_MCLRE$ON 0000                           ?_main 0070                   __CFG_WDTE$OFF 0000  
               __end_of___lwdiv 06BB                 __end_of___lwmod 0678                           _RCSTA 019D  
                         _SPBRG 019B                           _PORTA 000C                           _TRISA 008C  
                         _TXREG 019A                           _TXSTA 019E                   __CFG_PWRTE$ON 0000  
                         _delay 0624                           status 0003                           wtemp0 007E  
               __initialization 07F6                    __end_of_main 07F6                          ??_main 0020  
                __CFG_PLLEN$OFF 0000                          ?_delay 0070                          _ADCON0 009D  
                        _ADCON1 009E                          _ADRESH 009C                          _ADRESL 009B  
                        _FVRCON 0117                          _OSCCON 0099                  __CFG_STVREN$ON 0000  
                     ??___lwdiv 0074                       ??___lwmod 0074         __end_of__initialization 07FD  
                __pcstackCOMMON 0070                   __end_of_delay 063D                  _OPTION_REGbits 0095  
                       ??_delay 0072                      __pbssBANK0 0025  __size_of_UART_send_uint16_4dec 0073  
 __end_of_UART_send_uint16_4dec 072E                      __pmaintext 072E                         _BAUDCON 019F  
       __size_of_UART_send_char 000D                 _adc_ch1_val_lsb 007C                 _adc_ch1_val_msb 007D  
               _adc_ch2_val_lsb 0027                 _adc_ch2_val_msb 0028                         ___lwdiv 0678  
                       ___lwmod 063D                         __ptext1 0624                         __ptext2 06BB  
                       __ptext3 063D                         __ptext4 0678                         __ptext5 0617  
                       delay@ms 0070            end_of_initialization 07FD                __CFG_FOSC$INTOSC 0000  
                     _TRISAbits 008C                       _TXSTAbits 019E                     _BAUDCONbits 019F  
           start_initialization 07F6                  _UART_send_char 0617          __end_of_UART_send_char 0624  
                   __pbssCOMMON 007C                       ___latbits 0001                   __pcstackBANK0 0020  
         _UART_send_uint16_4dec 06BB                ___lwdiv@dividend 0072                        ?___lwdiv 0070  
                      ?___lwmod 0070                 ?_UART_send_char 0070                ___lwdiv@quotient 0075  
                __size_of_delay 0019     UART_send_uint16_4dec@toSend 007B                        _LATAbits 010C  
      UART_send_uint16_4dec@val 0078              UART_send_char@data 0070                      _ADCON0bits 009D  
                    _ADCON1bits 009E          ?_UART_send_uint16_4dec 0078                __size_of___lwdiv 0043  
              __size_of___lwmod 003B                 ___lwdiv@divisor 0070                 ___lwdiv@counter 0077  
              _adc_temp_val_lsb 0025                _adc_temp_val_msb 0026                   __size_of_main 00C8  
                   _OSCSTATbits 009A                      _INTCONbits 000B                      _FVRCONbits 0117  
              ___lwmod@dividend 0072               __CFG_CLKOUTEN$OFF 0000                ??_UART_send_char 0070  
               ___lwmod@divisor 0070                 ___lwmod@counter 0075  
